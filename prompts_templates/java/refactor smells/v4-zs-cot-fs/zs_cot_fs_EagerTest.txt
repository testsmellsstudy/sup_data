---SYSTEMCONTENT---You are an expert Java developer. 

---USERCONTENT---Your task is to refactor the Java test code provided within triple backticks.


Let's start step by step. First, this test code contains a test smell known as "Eager Test Smell", which occurs when a test method invokes several methods of the production object. Second, I need a version of code that keeps the same test's intention but mitigates this smell.
One approach involves instantiating the result of the production methods and arranging them in a setUp method.

Example 1:
<Provided test code>
```
@Test
public void NmeaSentence_GPGSA_ReadValidValues(){
    NmeaSentence nmeaSentence = new NmeaSentence("$GPGSA,A,3,04,05,,09,12,,,24,,,,,2.5,1.3,2.1*39");
    assertThat("GPGSA - read PDOP", nmeaSentence.getLatestPdop(), is("2.5"));
    assertThat("GPGSA - read HDOP", nmeaSentence.getLatestHdop(), is("1.3"));
    assertThat("GPGSA - read VDOP", nmeaSentence.getLatestVdop(), is("2.1"));
}
```
<Refactored test code>
```
@Before
public void setUp() {
  nmeaSentence = new NmeaSentence("$GPGSA,A,3,04,05,,09,12,,,24,,,,,2.5,1.3,2.1*39");
}

@Test
public void testPDOP() {
  assertThat("GPGSA - read PDOP", nmeaSentence.getLatestPdop(), is("2.5"));
}

@Test
public void testHDOP() {
  assertThat("GPGSA - read HDOP", nmeaSentence.getLatestHdop(), is("1.3"));
}

@Test
public void testVDOP() {
  assertThat("GPGSA - read VDOP", nmeaSentence.getLatestVdop(), is("2.1"));
}
```

Now provide the refactored test code for the code below, delimited by triple backticks.
Attention: Preserve all existing import statements in the Java code. You may introduce new packages as needed.

```
{test_code_with_smell_here}
```


