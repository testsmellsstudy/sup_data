---SYSTEMCONTENT---You are an expert Java developer. 

---USERCONTENT---
Let's start step by step. First, this test code contains a test smell known as "Lazy Test Smell", which occurs when multiple test methods invoke the same method of the production object. Second, I need a version of code that keeps the same test's intention but mitigates this smell.
One approach involves instantiating the result of the production methods and arranging them in a setUp method.

An one-shot example is provided to you to be used as a reference:

Example 1:
<Provided test code>
```
@Test
public void testDecrypt() throws Exception {
    FileInputStream file = new FileInputStream(ENCRYPTED_DATA_FILE_4_14);
    byte[] enfileData = new byte[file.available()];
    FileInputStream input = new FileInputStream(DECRYPTED_DATA_FILE_4_14);
    byte[] fileData = new byte[input.available()];
    input.read(fileData);
    input.close();
    file.read(enfileData);
    file.close();
    String expectedResult = new String(fileData, "UTF-8");
    assertEquals("Testing simple decrypt",expectedResult, Cryptographer.decrypt(enfileData, "test"));
}

@Test
public void testEncrypt() throws Exception {
    String xml = readFileAsString(DECRYPTED_DATA_FILE_4_14);
    byte[] encrypted = Cryptographer.encrypt(xml, "test");
    String decrypt = Cryptographer.decrypt(encrypted, "test");
    assertEquals(xml, decrypt);
}
```
<Refactored test code>
```
@Before
public void setUp() throws Exception {
  FileInputStream file = new FileInputStream(ENCRYPTED_DATA_FILE_4_14);
  byte[] enfileData = new byte[file.available()];
  file.read(enfileData);
  file.close();
  decryptedData = Cryptographer.decrypt(enfileData, "test");
}

@Test
public void testDecrypt() throws Exception {
  String expectedResult = new String(decryptedData, "UTF-8");
  assertEquals("Testing simple decrypt", expectedResult, decryptedData);
}

@Test
public void testEncrypt() throws Exception {
  String xml = readFileAsString(DECRYPTED_DATA_FILE_4_14);
  byte[] encrypted = Cryptographer.encrypt(xml, "test");
  String decrypt = Cryptographer.decrypt(encrypted, "test");
  assertEquals(xml, decrypt);
}
```

Now provide the refactored test code for the code below, delimited by triple backticks.
Attention: Preserve all existing import statements in the Java code. You may introduce new packages as needed.

```
{test_code_with_smell_here}
```
