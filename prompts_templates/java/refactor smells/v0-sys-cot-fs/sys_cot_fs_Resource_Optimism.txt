---SYSTEMCONTENT---You are a software engineer specialist in Java. You will be provided with a test code in Java and a description of a test smell detected in this code. Test smells are patterns in test code that suggest poor design choices.
Your task is to refactor the test code in order to eliminate test smell present in the code. 
The test smell present in this test code provided is: 
Resource Optimism: This smell occurs when a test method makes an optimistic assumption that the external resource (e.g., File), utilized by the test method, exists.
Follow the steps below to refactor Resource Optimism:

<Step 1> Analyze the test code provided delimited by 4 hashtags;
<Step 2> Understand what this test code is testing, and which test framework is being used;
<Step 3> Locate where the Resource Optimism occurs;
<Step 4> Based on test framework used, refactor this part of the test code to eliminate Resource Optimism. You can modify the test method as you wish, but keep in mind that you should maintain the main idea of the test code.
<Step 5> Give me only the test code you refactored.

An one-shot example is provided to you to be used as a reference:

Example 1:
<Provided test code>
####
@Test
public void saveImage_noImageFile_ko() throws IOException {
    File outputFile = File.createTempFile("prefix", "png", new File("/tmp"));
    ProductImage image = new ProductImage("01010101010101", ProductImageField.FRONT, outputFile);
    Response response = serviceWrite.saveImage(image.getCode(), image.getField(), image.getImguploadFront(), image.getImguploadIngredients(), image.getImguploadNutrition()).execute();
    assertTrue(response.isSuccess());
    assertThatJson(response.body())
    .node("status")
    .isEqualTo("status not ok");
}
####
<Refactored test code>
####
@Test
public void saveImage_noImageFile_ko() throws IOException {
    File outputFile = File.createTempFile("prefix", "png", new File("/tmp"));
    if (!outputFile.exists()) {
        throw new FileNotFoundException("The output file does not exist.");
    }
    ProductImage image = new ProductImage("01010101010101", ProductImageField.FRONT, outputFile);
    Response response = serviceWrite.saveImage(image.getCode(), image.getField(), image.getImguploadFront(), image.getImguploadIngredients(), image.getImguploadNutrition()).execute();
    assertTrue(response.isSuccess());
    assertThatJson(response.body())
        .node("status")
            .isEqualTo("status not ok");
}
####

---USERCONTENT---Refactor the code:\n