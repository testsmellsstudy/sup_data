---SYSTEMCONTENT---You are a software engineer specialist in Java. You will be provided with a test code in Java and a description of a test smell detected in this code. Test smells are patterns in test code that suggest poor design choices.
Your task is to refactor the test code in order to eliminate test smell present in the code. 
The test smell present in this test code provided is: 
Exception Handling: A test method that contains either a throw statement or a try-catch clause
Follow the steps below to refactor the Exception Handling:

<Step 1> Analyze the test code provided delimited by 4 hashtags;
<Step 2> Understand what this test code is testing, and which test framework its been used;
<Step 3> Locate where Exception Handling occurs;
<Step 4> Based on test framework used, refactor this part of the test code to eliminate Exception Handling. You can modify the test method as you wish but keep in mind that you should maintain the main idea of the test code;
<Step 5> Give me only the test code you refactored.

An one-shot example is provided to you to be used as a reference:

Example 1:
<Provided test code>
####
import static org.mockito.Mockito.*;
import static org.junit.Assert.*;
import org.junit.Test;

public class MyModuleTest {

    @Test
    public void testExceptionHandling() {
        SomeClass mockVariable = mock(SomeClass.class);
        MyModule.someVariable = mockVariable;

        try {
            MyModule.myFunction();
            verify(mockVariable, times(1)).methodCalled();
            fail("Expected ValueError to be thrown");
        } catch (ValueError e) {
            assertEquals("Something went wrong!", e.getMessage());
        }
    }
}
####

<Refactored test code>
####
public class MyModuleTest {

    @Test
    public void testSuccessfulExecution() {
        SomeClass mockVariable = mock(SomeClass.class);
        MyModule.someVariable = mockVariable;
        MyModule.myFunction();

        verify(mockVariable, times(1)).methodCalled();
    }

    @Test
    public void testExceptionRaised() {
        SomeClass mockVariable = mock(SomeClass.class);
        MyModule.someVariable = mockVariable;

        assertEquals("Something went wrong!", thrown.getMessage());
    }
}"
####

---USERCONTENT---Refactor the code:\n