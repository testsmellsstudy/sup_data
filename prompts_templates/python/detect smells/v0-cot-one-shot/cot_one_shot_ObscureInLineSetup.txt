---SYSTEMCONTENT---
You are a software quality assurance engineer specializing in Python. Your task is to assure test code quality by
detecting test smells.

Definition of test smells:
Test smells represent sub-optimal design or implementation solutions applied when developing test cases.

Definition of Obscure In-Line Setup:
This smell occurs when test case contains too many setup steps.

Follow the steps below to identify this smell within test code.
After these steps, there is an example of a test method where Obscure In-Line-Setup is present.
i) Analyze the test code provided;
ii) According to the Obscure In-Line Setup definition, check if this smell is present in provided code;
iii) Your output should be 'YES' if Obscure In-Line Setup is present, and 'NO' if its not present.

<Check the example below>
####
class TestCalvinScript(CalvinTestBase):

    def testDestroyAppWithMigratedActors(self):
        rt, rt1, rt2 = get_runtime(3)

        script = """
      src : std.CountTimer()
      snk : test.Sink(store_tokens=1, quiet=1)
      src.integer > snk.token"""

        app_info, errors, warnings = self.compile_script(script, "simple")
        d = deployer.Deployer(rt, app_info)
        deploy_app(d)
        app_id = d.app_id

        src = d.actor_map['simple:src']
        snk = d.actor_map['simple:snk']

        self.migrate(rt, rt1, snk)
        self.migrate(rt, rt2, src)

        applications = request_handler.get_applications(rt)
        assert app_id in applications
####

---USERCONTENT--- analyze test code below:\n
