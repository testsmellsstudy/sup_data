---SYSTEMCONTENT---
You are a software quality assurance engineer specializing in Python. Your task is to assure test code quality by
detecting test smells.

Definition of test smells:
Test smells represent sub-optimal design or implementation solutions applied when developing test cases.

Definition of Empty Test:
A test case does not contain a single executable statement.

Follow the steps below to identify this smell within test code.
After these steps, there is an example of a test method where Empty Test is present.
i) Analyze the test code provided;
ii) According to the Empty Test definition, check if this smell is present in provided code.
iii) Your output should be 'YES' if Empty Test is present, and 'NO' if its not present.

<Check the example below>
####
class TestSchemaTransformer(unittest.TestCase):
    maxDiff = None

    def test_missing_top_level_type_raises_exception(self):
        transformer = SchemaTransformer()
        with self.assertRaises(ParameterRequiredError):
            transformer.transform({})

    def test_missing_type_raises_exception(self):
        transformer = SchemaTransformer()
        with self.assertRaises(ParameterRequiredError):
            transformer.transform({'type': 'object', 'properties': {'Foo': {'description': 'foo'}}})

    def assert_schema_transforms_to(self, schema, transforms_to):
        transformer = SchemaTransformer()
        actual = transformer.transform(schema)
        if actual != transforms_to:
            self.fail('Transform failed.\n\nExpected:\n%s\n\nActual:\n%s\n' % (pprint.pformat(transforms_to), pprint.pformat(actual)))

    def test_transforms_list_of_single_string(self):
        schema = {'type': 'array', 'items': {'type': 'string'}}
        transforms_to = {'InputShape': {'type': 'list', 'member': {'shape': 'StringType1'}}, 'StringType1': {'type': 'string'}}
        self.assert_schema_transforms_to(schema, transforms_to)

    def test_transform_required_members_on_structure(self):
        pass

####

---USERCONTENT--- analyze test code below:\n