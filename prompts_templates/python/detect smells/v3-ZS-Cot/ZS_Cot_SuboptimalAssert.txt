---SYSTEMCONTENT---
You are an expert Python developer. Your task is to detect test smells in test code.

Definition of test smells:
Test smells represent sub-optimal design or implementation solutions applied when developing test cases.

---USERCONTENT---
Let's proceed step by step. First, you will be provided with test code delimited by triple backticks. Second, I want to check if the test smell known as "Suboptimal Assert" is present in this test code. This test smell occurs when the assertion function could be replaced by a more intuitive one. You can find below the list of suitable changes that could be applied, delimited by four hashtags.
####
assertTrue(X in Y) can be rewritten as assertIn(X, Y) 
assertTrue(X not in Y) can be rewritten as assertNotIn(X, Y) 
assertFalse(X in Y) can be rewritten as assertNotIn(X, Y) 
assertFalse(X not in Y) can be rewritten as assertIn(X, Y) 
assertEqual(X, False) can be rewritten as assertFalse(X) 
assertEqual(X, True) can be rewritten as assertTrue(X) 
assertNotEqual(X, False) can be rewritten as assertTrue(X) 
assertNotEqual(X, True) can be rewritten as assertFalse(X) 
assertIs(X, False) can be rewritten as assertFalse(X) 
assertIs(X, True) can be rewritten as assertTrue(X) 
assertIsNot(X, False) can be rewritten as assertTrue(X) 
assertIsNot(X, True) can be rewritten as assertFalse(X) 
assertTrue(X == Y) can be rewritten as assertEqual(X, Y) 
assertTrue(X != Y) can be rewritten as assertNotEqual(X, Y) 
assertFalse(X == Y) can be rewritten as assertNotEqual(X, Y) 
assertFalse(X != Y) can be rewritten as assertEqual(X, Y) 
assertTrue(X is Y) can be rewritten as assertIs(X, Y) 
assertTrue(X is not Y) can be rewritten as assertIsNot(X, Y) 
assertFalse(X is Y) can be rewritten as assertIsNot(X, Y) 
assertFalse(X is not Y) can be rewritten as assertIs(X, Y) 
assertEqual(X, None) can be rewritten as assertIsNone(X) 
assertNotEqual(X, None) can be rewritten as assertIsNotNone(X) 
assertIs(X, None) can be rewritten as assertIsNone(X) 
assertIsNot(X, None) can be rewritten as assertIsNotNone(X) 
assertTrue(X < Y) can be rewritten as assertLess(X, Y) 
assertTrue(X <= Y) can be rewritten as assertLessEqual(X, Y) 
assertTrue(X > Y) can be rewritten as assertGreater(X, Y) 
assertTrue(X >= Y) can be rewritten as assertGreaterEqual(X, Y) 
assertFalse(X < Y) can be rewritten as assertGreaterEqual(X, Y) 
assertFalse(X <= Y) can be rewritten as assertGreater(X, Y) 
assertFalse(X > Y) can be rewritten as assertLessEqual(X, Y) 
assertFalse(X >= Y) can be rewritten as assertLess(X, Y)
####

Third, according to the definition of "Suboptimal Assert" you should answer 'yes' if you identify this test smell in the test code, or you should answer 'no' if you don't find this test smell in the presented test code.

Now, analyze the test code below:
```{class_code}```
